<Project Sdk="Microsoft.NET.Sdk.Web">
	
  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <Nullable>enable</Nullable>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <SpaProxyServerUrl>https://localhost:44490</SpaProxyServerUrl>
    <SpaProxyLaunchCommand>npm start</SpaProxyLaunchCommand>
    <ImplicitUsings>enable</ImplicitUsings>
    <UserSecretsId>0e4af84a-4ec7-46d3-9212-641c45c25418</UserSecretsId>
  </PropertyGroup>
	
  <ItemGroup>
    <PackageReference Include="FastEndpoints" Version="5.28.0" />
    <PackageReference Include="FastEndpoints.Swagger" Version="5.28.0" />
    <PackageReference Include="Microsoft.ApplicationInsights.AspNetCore" Version="2.22.0" />
    <PackageReference Include="Microsoft.AspNetCore.SpaProxy" Version="8.0.8" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Cosmos" Version="8.0.8" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="8.0.8">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.EntityFrameworkCore.Relational" Version="8.0.8" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="8.0.8" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="8.0.8">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.Extensions.Caching.Memory" Version="8.0.0" />
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="8.0.4" />
    <PackageReference Include="SendGrid" Version="9.29.3" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="6.7.1" />
    <PackageReference Include="UAParser" Version="3.1.47" />
    <PackageReference Include="Microsoft.DotNet.UpgradeAssistant.Extensions.Default.Analyzers" Version="0.4.421302">
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
  </ItemGroup>
	
  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>
	
  <ItemGroup>
    <None Remove="ClientApp\src\app\models\api\validate-secret-message-otp-request.model.ts" />
    <None Remove="ClientApp\src\app\models\api\validate-secret-message-otp-response.model.ts" />
    <None Remove="ClientApp\src\app\models\api\verify-secret-message-response.model.ts" />
    <None Remove="ClientApp\src\app\models\sjcl-encryption-result.model.ts" />
    <None Remove="ClientApp\src\extensions\string.extensions.ts" />
    <None Remove="ClientApp\src\app\models\api-error.model.ts" />
    <None Remove="ClientApp\src\app\models\get-secret-message-response.model.ts" />
    <None Remove="ClientApp\src\app\models\recently-stored-secret-messages-response.model.ts" />
    <None Remove="ClientApp\src\app\models\secret-message-data.model.ts" />
    <None Remove="ClientApp\src\app\models\secret-message-delivery-details.model.ts" />
    <None Remove="ClientApp\src\app\models\secret-message.model.ts" />
    <None Remove="ClientApp\src\app\models\sjcl-decryption-result.model.ts" />
    <None Remove="ClientApp\src\app\models\store-new-secret-message-request.model.ts" />
    <None Remove="ClientApp\src\app\typings.d.ts" />
  </ItemGroup>
	
  <ItemGroup>
    <TypeScriptCompile Include="ClientApp\src\app\models\api\validate-secret-message-otp-response.model.ts">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Include="ClientApp\src\app\models\api\validate-secret-message-otp-request.model.ts">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Include="ClientApp\src\app\models\api\verify-secret-message-response.model.ts">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Include="ClientApp\src\app\models\sjcl-encryption-result.model.ts">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Include="ClientApp\src\extensions\string.extensions.ts">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Include="ClientApp\src\app\models\api\recently-stored-secret-messages-response.model.ts">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Include="ClientApp\src\app\models\api\secret-message-delivery-notification.model.ts">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Include="ClientApp\src\app\models\api\get-secret-message-response.model.ts">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Include="ClientApp\src\app\models\api\store-new-secret-message-request.model.ts">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Include="ClientApp\src\app\models\secret-message.model.ts">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Include="ClientApp\src\app\models\sjcl-decryption-result.model.ts">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Include="ClientApp\src\app\models\common\secret-message-data.model.ts">
      <SubType>Code</SubType>
    </TypeScriptCompile>
  </ItemGroup>
	
  <ItemGroup>
    <Folder Include="ClientApp\.angular\cache\" />
    <Folder Include="Migrations\" />
  </ItemGroup>
	
  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>
	
  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --configuration production" />
	  
    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>wwwroot\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>
</Project>
